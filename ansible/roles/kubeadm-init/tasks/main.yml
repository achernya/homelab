- name: Install haproxy if in stacked mode
  ansible.builtin.include_role:
    name: haproxy-k8s-api

- name: Initialize k8s cluster
  shell: kubeadm init --pod-network-cidr=10.244.0.0/16 --service-cidr=10.254.240.0/20 --skip-token-print --skip-phases=addon/kube-proxy {{ '--control-plane-endpoint={}:{}'.format(k8s_api_vip, k8s_api_port) if k8s_api_mode != 'direct' else '' }} >> cluster-initialized
  args:
    chdir: $HOME
    creates: cluster-initialized
  when:
    # Only the first kubemaster actually runs the full init
    - inventory_hostname == play_hosts[0]

- name: Get token
  ansible.builtin.include_role:
    name: kubeadm-get-token
    public: true
  vars:
    join_masters: true

- name: Join cluster
  shell: "{{ hostvars[play_hosts[0]].join_command }} --control-plane --certificate-key {{ hostvars[play_hosts[0]].certificate_key }} >> node-joined"
  args:
    chdir: $HOME
    creates: node-joined
  when:
    # Join all nodes except the first kubemaster
    - inventory_hostname != play_hosts[0]

# Manually patch the control plane to have exposed API endpoints
# required for monitoring. Normally, this would be done with --config,
# but that's mutualy exclusive with many of the arguments we're
# passing to kubeadm. Since these changes get picked up immediately,
# this works just as well.
- name: Patch control-plane manifests
  block:
    - name: Update etcd metrics port
      ansible.builtin.replace:
        path: /etc/kubernetes/manifests/etcd.yaml
        regexp: '(^.*?listen-metrics-urls=http://)[^:]+(.*)$'
        replace: '\g<1>0.0.0.0\g<2>'
    - name: Update bind-address for kube-scheduler and kube-controller-manager
      ansible.builtin.replace:
        path: /etc/kubernetes/manifests/{{ item }}.yaml
        regexp: '(^.*?bind-address=)(.*)$'
        replace: '\g<1>0.0.0.0'
      with_items:
        - kube-controller-manager
        - kube-scheduler

- name: Create kubeconfig symlinks
  block:
    - name: Ensure /root/.kube exists
      ansible.builtin.file:
        path: /root/.kube/
        state: directory
    - name: Symlink /etc/kubernetes/admin.conf to /root/.kube/config
      ansible.builtin.file:
        src: /etc/kubernetes/admin.conf
        dest: /root/.kube/config
        state: link

- name: Copy kubeconfig locally
  block:
    - name: Ensure /root/.kube exists
      ansible.builtin.file:
        path: ~/.kube/
        state: directory
      delegate_to: localhost
    - name: Fetch /etc/kubernetes/admin.conf to ~/.kube/config
      ansible.builtin.fetch:
        src: /etc/kubernetes/admin.conf
        dest: ~/.kube/config
        flat: true
      when:
        # Only copy the credentials once
        - inventory_hostname == play_hosts[0]
