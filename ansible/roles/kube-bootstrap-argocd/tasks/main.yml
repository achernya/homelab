# Import github variables from the common role
- name: "Import github variables"
  ansible.builtin.include_role:
    name: github
    public: true

- name: Ensure kubectl proxy is running
  ansible.builtin.uri:
    url: 'http://127.0.0.1:8001/readyz?verbose'
    return_content: yes
    status_code:
      - 200
  retries: 5
  delay: 1
  register: uri_output
  until: uri_output.status == 200
  delegate_to: localhost

# Install argocd, using the `kubectl proxy` running locally.
- name: Create argocd namespace
  kubernetes.core.k8s:
    name: argocd
    api_version: v1
    kind: Namespace
    state: present
    host: 'http://127.0.0.1:8001'
  delegate_to: localhost

- name: Deploy argocd
  block:
    - name: Download argocd install.yaml
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
        dest: /tmp/argocd-install.yaml
        mode: '0664'
      delegate_to: localhost
    - name: Apply argocd install.yaml
      kubernetes.core.k8s:
        api_version: v1
        namespace: argocd
        state: present
        src: /tmp/argocd-install.yaml
        host: 'http://127.0.0.1:8001'
      delegate_to: localhost

- name: Add this repository
  block:
    - name: Add github repository
      kubernetes.core.k8s:
        host: 'http://127.0.0.1:8001'
        state: present
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: homelab
            namespace: argocd
            labels:
              argocd.argoproj.io/secret-type: repository
          stringData:
            type: git
            url: "https://{{ github_url }}"
      delegate_to: localhost
    - name: Add github personal access token
      kubernetes.core.k8s:
        host: 'http://127.0.0.1:8001'
        state: present
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: private-repo-creds
            namespace: argocd
            labels:
              argocd.argoproj.io/secret-type: repo-creds
          stringData:
            type: git
            url: "https://{{ github_url }}"
            password: "{{ github_pat }}"
            username: "{{ github_username }}"
      delegate_to: localhost
      when: github_pat is defined

- name: Add app-of-apps
  kubernetes.core.k8s:
    host: 'http://127.0.0.1:8001'
    state: present
    template:
      path: 'applicationset.yaml.j2'
      variable_start_string: '[['
      variable_end_string: ']]'
  delegate_to: localhost

- name: Wait for argocd to initialize
  kubernetes.core.k8s_info:
    host: 'http://127.0.0.1:8001'
    kind: Deployment
    namespace: argocd
    wait: true
    wait_condition:
      type: Available
    wait_sleep: 5
    wait_timeout: 120
  delegate_to: localhost
