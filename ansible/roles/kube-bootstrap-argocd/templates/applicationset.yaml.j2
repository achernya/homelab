apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: cluster-git
  namespace: argocd
spec:
  goTemplate: false
  goTemplateOptions: ["missingkey=error"]
  generators:
    - merge:
        mergeKeys:
          - values.name
          - values.destination
        generators:
          # Cross-product all registered clusters with all registered
          # applications
          - matrix:
              generators:
                # Select only clusters that are not the special
                # `in-cluster` object.
                - clusters:
                    selector:
                      matchLabels:
                        argocd.argoproj.io/secret-type: cluster
                    values:
                      destination: "{{name}}"
                # Get every application in the `kubernetes` directory, so it
                # can be automatically enforced.
                - git:
                    repoURL: "https://[[ github_url ]]"
                    revision: HEAD
                    directories:
                      - path: kubernetes/*
                      - path: kubernetes/acme-dns
                        exclude: true
                    values:
                      name: "{{path[1]}}"
                      namespace: "{{path.basenameNormalized}}"
                      syncWave: "0"
                      syncOptionsReplace: "false"
          # Each app in `kubernetes/*` can have an optional override
          # for each cluster that takes precedence.
          - git:
              repoURL: "https://[[ github_url ]]"
              revision: HEAD
              directories:
                - path: kubernetes/*/override/*
              values:
                destination: "{{path[3]}}"
                name: "{{path[1]}}"
          # Per-directory overrides. These override even the
          # per-cluster customizations. These also need to be matrix'd
          # with the cluster generator for the merge keys to work.
          - matrix:
              generators:
                - clusters:
                    selector:
                      matchLabels:
                        argocd.argoproj.io/secret-type: cluster
                    values:
                      destination: "{{name}}"
                - list:
                    elements:
                      # `argocd` customizations should be installed
                      # before other packages get synced.
                      - values:
                          name: "argocd"
                          syncWave: "-9000"
                      # `cilium` is installed in the `kube-system`
                      # namespace, not the default namespace that
                      # matches the directory name.
                      - values:
                          name: "cilium"
                          namespace: kube-system
                      # `certs-issuers` is a set of configs for
                      # cert-manager, which is installed in the
                      # `certs` namespace.
                      - values:
                          name: "certs-issuers"
                          namespace: certs
                      # `monitoring-crds` needs to be installed ahead
                      # of `monitoring`, but live in the same
                      # namespace.
                      - values:
                          name: "monitoring-crds"
                          namespace: monitoring
                          syncWave: "-8900"
                          syncOptionsReplace: "true"
  template:
    metadata:
      name: "{{values.name}}"
      annotations:
        # This may not actually work? See
        # https://github.com/argoproj/applicationset/issues/221.
        argocd.argoproj.io/sync-wave: "{{values.syncWave}}"
    spec:
      project: default
      source:
        repoURL: "https://[[ github_url ]]"
        targetRevision: HEAD
        path: "{{path}}"
      destination:
        server: "{{server}}"
        namespace: "{{values.namespace}}"
      syncPolicy:
        syncOptions:
          - CreateNamespace=true
          - Replace={{values.syncOptionsReplace}}
        automated:
          selfHeal: true
          prune: true
